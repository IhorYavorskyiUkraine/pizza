generator client {
   provider = "prisma-client-js"
}

datasource db {
   provider  = "postgresql"
   url       = env("POSTGRES_URL")
   directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
   id Int @id @default(autoincrement())

   fullName String
   email    String   @unique
   password String
   role     UserRole @default(USER)

   verified DateTime

   provider   String?
   providerId String?

   cart            Cart?
   orders          Order[]
   verficationCode VerficationCode?

   createdAt DateTime @default(now())
   update    DateTime @updatedAt
}

model Category {
   id   Int    @id @default(autoincrement())
   name String @unique

   products Product[]
}

model Product {
   id Int @id @default(autoincrement())

   name     String
   imageUrl String

   ingredients Ingredient[]
   variants    ProductVar[]

   createdAt DateTime @default(now())
   update    DateTime @updatedAt

   category   Category @relation(fields: [categoryId], references: [id])
   categoryId Int
}

model ProductVar {
   id Int @id @default(autoincrement())

   price     Int
   size      Int?
   pizzaType Int?

   product Product @relation(fields: [productId], references: [id])

   cartItems CartItem[]

   productId Int
}

model Ingredient {
   id Int @id @default(autoincrement())

   name     String
   price    Int
   imageUrl String

   cartItems CartItem[]

   products Product[]
}

model Cart {
   id Int @id @default(autoincrement())

   user   User? @relation(fields: [userId], references: [id])
   userId Int?  @unique

   items CartItem[]

   token String?

   totalAmount Int
}

model CartItem {
   id Int @id @default(autoincrement())

   productVar   ProductVar @relation(fields: [productVarId], references: [id])
   productVarId Int

   cart   Cart @relation(fields: [cartId], references: [id])
   cartId Int

   quantity Int

   ingredients Ingredient[]
}

model Order {
   id Int @id @default(autoincrement())

   user   User? @relation(fields: [userId], references: [id])
   userId Int?

   token       String
   totalAmount Int
   status      OrderStatus
   paymentId   String?

   items Json

   fullName String
   email    String
   phone    String
   address  String
   comment  String?

   createdAt DateTime @default(now())
   update    DateTime @updatedAt
}

model VerficationCode {
   id Int @id @default(autoincrement())

   user   User? @relation(fields: [userId], references: [id])
   userId Int?  @unique

   code String

   expiresAt DateTime @default(now())

   createdAt DateTime @default(now())

   @@unique([userId, code])
}

enum OrderStatus {
   PENDING
   SUCCEEDED
   CANCELED
}

enum UserRole {
   USER
   ADMIN
}
